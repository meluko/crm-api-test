#  Setup AWS infrastructure to deploy CRM API
#
#  ansible-playbook ansible/setup_infrastructure.yml
#

---
- name: Create IAM policies
  hosts: localhost
  roles:
    - create-iam-policies

- name: Create IAM role
  hosts: localhost
  roles:
    - create-iam-role
  vars:
    ROLE_NAME: crm_api
    ROLE_DESCRIPTION: Role to be used in crm_api instance
    MANAGED_POLICIES:
      - allow_pull_images

- name: Setup internet_access security group
  hosts: localhost
  roles:
    - create_security_group
  vars:
    AWS_REGION: "{{ lookup('env', 'AWS_REGION') }}"
    VPC_ID: "{{ lookup('env', 'VPC_ID') }}"
    NAME: internet_access
    DESCRIPTION: Allow access from internet
    TAGS:
      Name: internet_access
    RULES:
      - proto: tcp
        ports:
          - 80
        rule_desc: Allow
        cidr_ip: 0.0.0.0/0

- name: Create internal_crm_client security group to access internal server
  hosts: localhost
  roles:
    - create_security_group
  vars:
    AWS_REGION: "{{ lookup('env', 'AWS_REGION') }}"
    VPC_ID: "{{ lookup('env', 'VPC_ID') }}"
    NAME: internal_crm_client
    DESCRIPTION: Instances with access to internal_crm_server*
    TAGS:
      Name: internal_crm_client
  post_tasks:
    - set_fact: internal_crm_client={{ last_created_sg.group_id }}

- name: Setup internal server security group to allow connections from load balancer
  hosts: localhost
  roles:
    - create_security_group
  vars:
    AWS_REGION: "{{ lookup('env', 'AWS_REGION') }}"
    VPC_ID: "{{ lookup('env', 'VPC_ID') }}"
    NAME: internal_crm_server
    DESCRIPTION: Allow access to CRM API
    TAGS:
      Name: internal_crm_server
    RULES:
      - proto: tcp
        ports:
          - 8088
        rule_desc: Allow
        group_id:
          - "{{ internal_crm_client }}"

- name: Setup ssh security group
  hosts: localhost
  roles:
    - create_security_group
  vars:
    AWS_REGION: "{{ lookup('env', 'AWS_REGION') }}"
    VPC_ID: "{{ lookup('env', 'VPC_ID') }}"
    NAME: ssh_access
    DESCRIPTION: Allow access through ssh
    TAGS:
      Name: ssh_access
    RULES:
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: allow inbound connections via SSH (IPv4)

- name: Create ec2 instance
  hosts: localhost
  roles:
    - create-ec2-instance
  vars:
    AWS_ACCOUNT_ID: "{{ lookup('env', 'AWS_ACCOUNT_ID') }}"
    AWS_REGION: "{{ lookup('env', 'AWS_REGION') }}"
    SECURITY_GROUP_NAMES:
      - internal_crm_server
      - ssh_access
    IAM_ROLE_NAME: crm_api
    INSTANCE_TYPE: t3.nano
    IMAGE: ami-0fc970315c2d38f01
    VPC_SUBNET_ID: "{{ lookup('env', 'VPC_SUBNET_ID') }}"
    VPC_ID: "{{ lookup('env', 'VPC_ID') }}"
    KEY_NAME: "{{ lookup('env', 'KEY_NAME') }}"
    NAME_TAG: "{{ lookup('env', 'NAME_TAG') }}"
    TERMINATION_PROTECTION: "{{ lookup('env', 'TERMINATION_PROTECTION') }}"

- name: Add instance to inventory group
  hosts: localhost
  roles:
    - add-instance-to-inventory-group
  vars:
    NAME_TAG: "{{ lookup('env', 'NAME_TAG') }}"
    AWS_REGION: "{{ lookup('env', 'AWS_REGION') }}"
    ANSIBLE_USER: ec2-user

- name: Create swap file
  hosts: added_hosts
  roles:
    - setup-swapfile
  vars:
    SWAP_SIZE: 1G

- name: Install dependencies
  hosts: added_hosts
  roles:
    - install-dependencies

- name: Setup Load balancer
  hosts: localhost
  roles:
    - create-load-balancer
  vars:
    NAME_TAG: "{{ lookup('env', 'NAME_TAG') }}"
    AWS_REGION: "{{ lookup('env', 'AWS_REGION') }}"
    NAME: crm-api-lb
    SECURITY_GROUP_NAMES:
      - internet_access
      - internal_crm_client
    LISTENERS:
      - protocol: http
        load_balancer_port: 80
        instance_protocol: http
        instance_port: 8088
    HEALTH_CHECK:
      ping_protocol: http
      ping_port: 8088
      ping_path: "/"
      response_timeout: 5
      interval: 60
      unhealthy_threshold: 2
      healthy_threshold: 10
      
- name: Setup ECR repository
  hosts: localhost
  tasks:
    - ecs_ecr:
        name: crm_api_test      
